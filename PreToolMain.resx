<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="IPKFileDiag.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="ProgressBarTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>130, 17</value>
  </metadata>
  <metadata name="ProgressBarTimer2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>281, 18</value>
  </metadata>
  <metadata name="AppProjDiag.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>433, 18</value>
  </metadata>
  <metadata name="ProgressBarTimer3.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>554, 18</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBPT/8MCgn/EA4O/yYkJP8bHhz/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1MS/8TEA//HB0d/xMV
        Ff8JDAr/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEpK
        Sv8XFxf/JCUj/wwNC/8NDQ3/DQ0N/woLCf8ICQf/BwkG/zQxMf/f3dn/BgcD/wcIBv8LDAr/CwsL/wwM
        DP8NDgz/Dg8N/xobGf8ZGRn/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEZGRv8bGxv/CwwK/w0ODP8LCwv/CwsL/woLCf8ICQf/DQ8N/y0qKf8jHhv/CwgE/wgJ
        B/8HCAb/CgoK/wsLC/8MDQv/DQ4M/xITEP8ODg7/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//8AAAAAAAP//gAAAAAAA//4AAAAA
        AAD//gAAAAAAAP/+AAAAAAAA//4AAAAAAAD//AAAAAAAAP/8AAAAAAAA//wAAAAAAAD//AAAAAAAAP/8
        AAAAAAAA//wAAAAAAAD//AAAAAAAAP/8AAAAAAAA//wAAAAAAAD//AAAP/8AAP/8AAA//wAA//wAAD//
        AAD//AAAP/8AAP/8AAA//wAA//wAAD//AAD//AAAP/8AAP/8AAA//wAA//wAAD//AAD//AAAP/8AAP/8
        AAA//wAA//wAAD//AAD//AAAH/8AAP/8AAA//wAA//wAAD//AAD//AAAP/8AAP/8AAA//wAA//wAAB//
        AAD//AAAP/8AAP/8AAA//wAA//wAAD//AAD//AAAP/8AAP/8AAA//wAA//wAAD//AAD//AAAP/8AAP/8
        AAA//wAA//wAAD//AAD//AAAP/8AAP/+AAA//wAA//4AAD//AAD//wAA//8AAP//wAP//wAA////////
        AAA=
</value>
  </data>
</root>